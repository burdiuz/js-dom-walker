{"version":3,"file":"dom-walker.js","sources":["../node_modules/tree-walker/dist/tree-walker.js","../source/augmentations/event.js","../source/augmentations/list.js","../source/augmentations/node.js","../source/htmlro-adapter.js","../source/index.js"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.TreeWalker = {})));\n}(this, (function (exports) { 'use strict';\n\n  let defaultAdapter = null;\n\n  const setDefaultAdapter = adapter => {\n    defaultAdapter = adapter;\n  };\n  const getDefaultAdapter = () => defaultAdapter;\n\n  const namePrefixes = {};\n\n  const isValidPrefix = prefix => typeof prefix === 'string' && prefix.length === 1 && namePrefixes.hasOwnProperty(prefix);\n\n  const isPrefixedKey = key => key && typeof key === 'string' && key.length > 1 && namePrefixes.hasOwnProperty(key.charAt());\n\n  const getPrefixHandler = key => namePrefixes[key.charAt()];\n\n  const setNamePrefix = (prefix, handler) => {\n    if (typeof prefix !== 'string' || prefix.length !== 1) {\n      throw new Error('Name Prefix must be one character string.');\n    }\n\n    namePrefixes[prefix] = handler;\n  };\n\n  const isIntKey = key => `${parseInt(key, 10)}` === key;\n\n  const getValue = (node, adapter, childName = undefined) => {\n    if (childName !== undefined) {\n      return adapter.getChildrenByName(node, childName);\n    }\n\n    return node;\n  };\n\n  const getSingleNode = (node, adapter, childName = undefined) => {\n    const value = getValue(node, adapter, childName);\n\n    if (adapter.isList(value)) {\n      return adapter.getNodeAt(node);\n    }\n\n    return value;\n  };\n\n  const getNodeList = (node, adapter, childName = undefined) => {\n    return adapter.toList(getValue(node, adapter, childName));\n  };\n\n  let augmentations = {};\n\n  const resetAugmentations = (augs = {}) => {\n    augmentations = augs;\n  };\n\n  const addAugmentations = (augs = {}) => {\n    augmentations = Object.assign({}, augmentations, augs);\n  };\n\n  const hasAugmentation = key => key && typeof key === 'string' && augmentations.hasOwnProperty(key);\n\n  const applyAugmentation = (key, ...args) => augmentations[key](...args);\n\n  let handlers;\n  let utils;\n\n  const createWalkerNode = (node, adapter, childName = undefined) => {\n    function TreeWalker() {\n      throw new Error('should have been never called');\n    }\n\n    // can be single Node and NodeList with length >= 0\n    // should it be always NodeList?\n    TreeWalker.node = node;\n    // childName always String/Symbol, Number's are being handled in proxy get wrapper\n    // INFO \"name\" is RO property of Function object\n    TreeWalker.childName = childName;\n    TreeWalker.adapter = adapter;\n    return TreeWalker;\n  };\n\n  const wrapWithProxy = (node, adapter, childName = undefined) => {\n    if (!adapter.isNode(node) && !adapter.isList(node)) {\n      return node;\n    }\n\n    return new Proxy(createWalkerNode(node, adapter, childName), handlers);\n  };\n\n  // eslint-disable-next-line\n  utils = {\n    isIntKey,\n    getValue,\n    getSingleNode,\n    getNodeList,\n    wrapWithProxy\n  };\n\n  const get = ({ node, adapter, childName }, key) => {\n    /*\n     if string childName used\n     if starts with $, return attribute value\n     else return wrapper with current single node and property childName\n     if numeric index used, use node as parent and childName is undefined\n     */\n    if (isIntKey(key)) {\n      return wrapWithProxy(adapter.getNodeAt(getNodeList(node, adapter, childName), key), adapter);\n    }\n\n    if (isPrefixedKey(key)) {\n      const handler = getPrefixHandler(key);\n      return handler(getValue(node, adapter, childName), adapter, [key.substr(1)], utils);\n    }\n\n    // return wrap with node and childName\n    return wrapWithProxy(getValue(node, adapter, childName), adapter, key);\n  };\n\n  const has = ({ node, adapter, childName }, key) => {\n    if (isIntKey(key)) {\n      return !!adapter.getNodeAt(getNodeList(node, adapter, childName), key);\n    }\n\n    if (isPrefixedKey(key)) {\n      // return adapter.hasAttribute(getSingleNode(node, adapter, childName), key.substr(1));\n      // don't know how to implement this, calling same handler as in GET seems overkill\n      return true;\n    }\n\n    return adapter.hasChild(getSingleNode(), key);\n  };\n\n  const apply = ({ node, adapter, childName }, thisArg, argumentsList) => {\n    if (childName === undefined) {\n      throw new Error('Cannot call on TreeWalker Node');\n    }\n\n    // this works only of childName === prefix, one char string\n    // otherwise it should be passed into arguments\n    if (isValidPrefix(childName)) {\n      const handler = getPrefixHandler(childName);\n      return handler(node, adapter, argumentsList, utils);\n    }\n\n    if (hasAugmentation(childName)) {\n      // INFO cannot use target because it contains method's childName, not Node childName\n      // call the function with saving context, so other augmentations are accessible via \"this\"\n      return applyAugmentation(childName, node, adapter, argumentsList, utils);\n    }\n\n    // FIXME might throw only in dev mode(needs implmentation)\n    throw new Error(`\"${childName}\" is not a callable object.`);\n  };\n\n  handlers = {\n    get,\n    has,\n    apply\n  };\n\n  const toString = node => node.toString();\n  const valueOf = node => node;\n\n  var coreAugmentations = {\n    toString,\n    valueOf,\n    [Symbol.toPrimitive]: node => node\n  };\n\n  addAugmentations(coreAugmentations);\n\n  const create = (root, adapter = getDefaultAdapter()) => wrapWithProxy(adapter.validateRoot(root), adapter);\n\n  exports.setDefaultAdapter = setDefaultAdapter;\n  exports.getDefaultAdapter = getDefaultAdapter;\n  exports.addAugmentations = addAugmentations;\n  exports.hasAugmentation = hasAugmentation;\n  exports.resetAugmentations = resetAugmentations;\n  exports.coreAugmentations = coreAugmentations;\n  exports.setNamePrefix = setNamePrefix;\n  exports.isValidPrefix = isValidPrefix;\n  exports.create = create;\n  exports.default = create;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=tree-walker.js.map\n","const on = (node, adapter, [ eventType, callback ], utils) => {\r\n  // add even listener\r\n};\r\n\r\nconst off = (node, adapter, [ eventType, callback ], utils) => {\r\n  // remove even listener\r\n};\r\n\r\nconst emmit = (node, adapter, [ event ], utils) => {\r\n  // dispatch event\r\n};\r\n\r\nexport default {\r\n  on,\r\n  off,\r\n  emmit,\r\n};\r\n","const length = (node, adapter) => {\r\n  if (adapter.isList(node)) {\r\n    return adapter.getLength(node);\r\n  } else if (adapter.isNode(node)) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nconst first = (node, adapter, args, utils) => {\r\n\r\n};\r\n\r\nconst filter = (node, adapter, [ callback ], utils) => {\r\n  // apply filter on element collection\r\n  // allways return wrapped HTMLCollection\r\n};\r\n\r\nconst map = (node, adapter, [ callback, wrapNodes = true ], utils) => {\r\n  // apply map on element collection\r\n  // if wrapNodes in FALSE, will generate normal Array with RAW results in it\r\n  // if wrapNodes in TRUE, will generate wrapped HTMLCollection and put all result into it\r\n};\r\n\r\nconst reduce = (node, adapter, [ callback, head ], utils) => {\r\n  // apply reduce on element collection\r\n};\r\n\r\nexport default {\r\n  length,\r\n  first,\r\n  filter,\r\n  map,\r\n  reduce,\r\n};\r\n","const name = (node, adapter, args, utils) =>\r\n  adapter.getName(utils.getSingleNode(node, adapter));\r\n\r\nconst text = (node, adapter) =>\r\n  adapter.getText(node);\r\n\r\nconst children = (node, adapter, [childName], utils) => {\r\n  node = utils.getSingleNode(node, adapter);\r\n  let list;\r\n\r\n  if (childName) {\r\n    list = adapter.getChildrenByName(node, childName);\r\n  } else {\r\n    list = adapter.getChildren(node);\r\n  }\r\n\r\n  return utils.wrapWithProxy(list, adapter);\r\n};\r\n\r\n// FIXME move parts to adapter\r\nconst attributes = (node, adapter, args, utils) => {\r\n  const target = utils.getSingleNode(node, adapter);\r\n  if (target.hasAttributes()) {\r\n    return target.attributes;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n// FIXME move parts to adapter\r\nconst attribute = (node, adapter, [attrName], utils) => {\r\n  const attrs = attributes(node, adapter, [], utils);\r\n  if (attrs) {\r\n    const attr = attrs.getNamedItem(attrName);\r\n    if (attr) {\r\n      return attr.value;\r\n    }\r\n  }\r\n  return '';\r\n};\r\n\r\nconst childAt = (node, adapter, [index = 0], utils) =>\r\n  adapter.getChildAt(utils.getSingleNode(node, adapter), index);\r\n\r\nconst root = (node, adapter, args, utils) =>\r\n  utils.wrapWithProxy(adapter.getNodeRoot(node), adapter);\r\n\r\nconst parent = (node, adapter, args, utils) =>\r\n  utils.wrapWithProxy(adapter.getNodeParent(node), adapter);\r\n\r\nconst query = (node, adapter, [queryString], utils) => {\r\n\r\n};\r\n\r\nconst queryAll = (node, adapter, [queryString], utils) => {\r\n\r\n};\r\n\r\nexport default {\r\n  name,\r\n  text,\r\n  children,\r\n  attributes,\r\n  attribute,\r\n  childAt,\r\n  root,\r\n  parent,\r\n  query,\r\n  queryAll,\r\n};\r\n","const isList = (node) => node instanceof HTMLCollection || node instanceof Array;\r\n\r\nconst toList = (...args) => {\r\n  const { length } = args;\r\n  const [node] = args;\r\n\r\n  if (length === 1 && isList(node)) {\r\n    return node;\r\n  }\r\n\r\n  const list = [];\r\n\r\n  for (let index = 0; index < length; index++) {\r\n    const part = args[index];\r\n    if (isList(part)) {\r\n      list.push.call(part);\r\n    } else {\r\n      list.push(part);\r\n    }\r\n  }\r\n\r\n  return list;\r\n};\r\n\r\nconst isNode = (node) => node instanceof HTMLElement;\r\n\r\nconst toNode = (node) => {\r\n  // if list we use only first node\r\n  if (isList(node)) {\r\n    return node.length ? node[0] : null;\r\n  }\r\n\r\n  return isNode(node) ? node : null;\r\n};\r\n\r\nconst getNodeAt = (list, index = 0) => {\r\n  if (isList(list)) {\r\n    return list[index];\r\n  }\r\n\r\n  return list;\r\n};\r\n\r\nconst getLength = (list) => list.length;\r\n\r\n// Node\r\nconst getChildren = (node) => {\r\n  node = toNode(node);\r\n\r\n  // if not a node, return empty list\r\n  return isNode(node) ? node.children : toList();\r\n};\r\n\r\nconst getChildrenByName = (node, name) => {\r\n  name = name.toLowerCase();\r\n  const children = getChildren(node);\r\n  const { length } = children;\r\n\r\n  if (!length) {\r\n    return children;\r\n  }\r\n\r\n  const list = [];\r\n\r\n  for (let index = 0; index < children.length; index++) {\r\n    const child = children[index];\r\n    if (child.nodeName.toLowerCase() === name) {\r\n      list.push(child);\r\n    }\r\n  }\r\n\r\n  return list;\r\n};\r\n\r\nconst hasChildren = (node) => !!toNode(node).childElementCount;\r\n\r\nconst hasChild = (node, name) => {\r\n  const children = getChildren(node);\r\n  const { length } = children;\r\n\r\n  for (let index = 0; index < length; index++) {\r\n    if (children[index].nodeName === name) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst getChildAt = (node, index) => getChildren(node)[index];\r\n\r\nconst hasAttribute = (node, name) => toNode(node).hasAttribute(name);\r\n\r\nconst getAttributeValue = (node, name) => toNode(node).getAttribute(name);\r\n\r\nconst getName = (node) => toNode(node).nodeName;\r\n\r\nconst getText = (node) => toNode(node).innerText;\r\n\r\nconst getNodeParent = (node) => toNode(node).parentNode;\r\n\r\nconst getNodeRoot = (node) => toNode(node).getRootNode();\r\n\r\nconst validateRoot = (root) => {\r\n  if (root === undefined || root === document) {\r\n    return document.firstElementChild;\r\n  } else if (typeof root === 'string') {\r\n    return document.querySelector(root);\r\n  }\r\n\r\n  return root;\r\n};\r\n\r\nexport default {\r\n  isList,\r\n  toList,\r\n  isNode,\r\n  getNodeAt,\r\n  getLength,\r\n  getChildren,\r\n  getChildrenByName,\r\n  hasChildren,\r\n  hasChild,\r\n  getChildAt,\r\n  hasAttribute,\r\n  getAttributeValue,\r\n  getName,\r\n  getText,\r\n  getNodeParent,\r\n  getNodeRoot,\r\n  validateRoot,\r\n};\r\n","import {\n  setNamePrefix,\n  setDefaultAdapter,\n  addAugmentations,\n  resetAugmentations,\n  coreAugmentations,\n  create as createRoot,\n} from 'tree-walker';\n\nimport htmlEventAugmentations from './augmentations/event';\nimport htmlListAugmentations from './augmentations/list';\nimport htmlNodeAugmentations from './augmentations/node';\n\nimport HTMLROAdapter from './htmlro-adapter';\n\nconst ATTRIBUTE_KEY = '$';\n\nsetDefaultAdapter(HTMLROAdapter);\n\naddAugmentations(coreAugmentations);\naddAugmentations(htmlNodeAugmentations);\naddAugmentations(htmlListAugmentations);\naddAugmentations(htmlEventAugmentations);\n\nsetNamePrefix(ATTRIBUTE_KEY, (node, adapter, [name]) => adapter.getAttributeValue(node, name));\n\nconst create = (root, adapter = HTMLROAdapter) => createRoot(root, adapter);\n\nexport {\n  addAugmentations,\n  resetAugmentations,\n  setNamePrefix,\n  create,\n};\n\nexport default create;\n"],"names":["this","on","node","adapter","eventType","callback","utils","off","emmit","event","length","isList","getLength","isNode","first","args","filter","map","wrapNodes","reduce","head","name","getName","getSingleNode","text","getText","children","childName","list","getChildrenByName","getChildren","wrapWithProxy","attributes","target","hasAttributes","attribute","attrName","attrs","attr","getNamedItem","value","childAt","index","getChildAt","root","getNodeRoot","parent","getNodeParent","query","queryString","queryAll","HTMLCollection","Array","toList","part","push","call","HTMLElement","toNode","getNodeAt","toLowerCase","child","nodeName","hasChildren","childElementCount","hasChild","hasAttribute","getAttributeValue","getAttribute","innerText","parentNode","getRootNode","validateRoot","undefined","document","firstElementChild","querySelector","ATTRIBUTE_KEY","setDefaultAdapter","HTMLROAdapter","addAugmentations","coreAugmentations","htmlNodeAugmentations","htmlListAugmentations","htmlEventAugmentations","setNamePrefix","create","createRoot"],"mappings":";;;;;;;;;;;;;;;;;CAAA,CAAC,UAAU,MAAM,EAAE,OAAO,EAAE;GAC1B,AAA+D,OAAO,CAAC,OAAO,CAAC,AAE5C,CAAC;EACrC,CAACA,cAAI,GAAG,UAAU,OAAO,EAAE;GAE1B,IAAI,cAAc,GAAG,IAAI,CAAC;;GAE1B,MAAM,iBAAiB,GAAG,OAAO,IAAI;KACnC,cAAc,GAAG,OAAO,CAAC;IAC1B,CAAC;GACF,MAAM,iBAAiB,GAAG,MAAM,cAAc,CAAC;;GAE/C,MAAM,YAAY,GAAG,EAAE,CAAC;;GAExB,MAAM,aAAa,GAAG,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;;GAEzH,MAAM,aAAa,GAAG,GAAG,IAAI,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,YAAY,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;;GAE3H,MAAM,gBAAgB,GAAG,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;;GAE3D,MAAM,aAAa,GAAG,CAAC,MAAM,EAAE,OAAO,KAAK;KACzC,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;OACrD,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;MAC9D;;KAED,YAAY,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC;IAChC,CAAC;;GAEF,MAAM,QAAQ,GAAG,GAAG,IAAI,CAAC,EAAE,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;;GAEvD,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,GAAG,SAAS,KAAK;KACzD,IAAI,SAAS,KAAK,SAAS,EAAE;OAC3B,OAAO,OAAO,CAAC,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;MACnD;;KAED,OAAO,IAAI,CAAC;IACb,CAAC;;GAEF,MAAM,aAAa,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,GAAG,SAAS,KAAK;KAC9D,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;;KAEjD,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;OACzB,OAAO,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;MAChC;;KAED,OAAO,KAAK,CAAC;IACd,CAAC;;GAEF,MAAM,WAAW,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,GAAG,SAAS,KAAK;KAC5D,OAAO,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;IAC3D,CAAC;;GAEF,IAAI,aAAa,GAAG,EAAE,CAAC;;GAEvB,MAAM,kBAAkB,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK;KACxC,aAAa,GAAG,IAAI,CAAC;IACtB,CAAC;;GAEF,MAAM,gBAAgB,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK;KACtC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;;GAEF,MAAM,eAAe,GAAG,GAAG,IAAI,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,aAAa,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;;GAEnG,MAAM,iBAAiB,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,KAAK,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;;GAExE,IAAI,QAAQ,CAAC;GACb,IAAI,KAAK,CAAC;;GAEV,MAAM,gBAAgB,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,GAAG,SAAS,KAAK;KACjE,SAAS,UAAU,GAAG;OACpB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;MAClD;;;;KAID,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;;;KAGvB,UAAU,CAAC,SAAS,GAAG,SAAS,CAAC;KACjC,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC;KAC7B,OAAO,UAAU,CAAC;IACnB,CAAC;;GAEF,MAAM,aAAa,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,GAAG,SAAS,KAAK;KAC9D,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;OAClD,OAAO,IAAI,CAAC;MACb;;KAED,OAAO,IAAI,KAAK,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC,EAAE,QAAQ,CAAC,CAAC;IACxE,CAAC;;;GAGF,KAAK,GAAG;KACN,QAAQ;KACR,QAAQ;KACR,aAAa;KACb,WAAW;KACX,aAAa;IACd,CAAC;;GAEF,MAAM,GAAG,GAAG,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,GAAG,KAAK;;;;;;;KAOjD,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;OACjB,OAAO,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC,EAAE,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;MAC9F;;KAED,IAAI,aAAa,CAAC,GAAG,CAAC,EAAE;OACtB,MAAM,OAAO,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC;OACtC,OAAO,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;MACrF;;;KAGD,OAAO,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;IACxE,CAAC;;GAEF,MAAM,GAAG,GAAG,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,GAAG,KAAK;KACjD,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;OACjB,OAAO,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;MACxE;;KAED,IAAI,aAAa,CAAC,GAAG,CAAC,EAAE;;;OAGtB,OAAO,IAAI,CAAC;MACb;;KAED,OAAO,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAE,GAAG,CAAC,CAAC;IAC/C,CAAC;;GAEF,MAAM,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,aAAa,KAAK;KACtE,IAAI,SAAS,KAAK,SAAS,EAAE;OAC3B,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;MACnD;;;;KAID,IAAI,aAAa,CAAC,SAAS,CAAC,EAAE;OAC5B,MAAM,OAAO,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC;OAC5C,OAAO,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;MACrD;;KAED,IAAI,eAAe,CAAC,SAAS,CAAC,EAAE;;;OAG9B,OAAO,iBAAiB,CAAC,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;MAC1E;;;KAGD,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,2BAA2B,CAAC,CAAC,CAAC;IAC7D,CAAC;;GAEF,QAAQ,GAAG;KACT,GAAG;KACH,GAAG;KACH,KAAK;IACN,CAAC;;GAEF,MAAM,QAAQ,GAAG,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;GACzC,MAAM,OAAO,GAAG,IAAI,IAAI,IAAI,CAAC;;GAE7B,IAAI,iBAAiB,GAAG;KACtB,QAAQ;KACR,OAAO;KACP,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,IAAI,IAAI;IACnC,CAAC;;GAEF,gBAAgB,CAAC,iBAAiB,CAAC,CAAC;;GAEpC,MAAM,MAAM,GAAG,CAAC,IAAI,EAAE,OAAO,GAAG,iBAAiB,EAAE,KAAK,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;;GAE3G,OAAO,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;GAC9C,OAAO,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;GAC9C,OAAO,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;GAC5C,OAAO,CAAC,eAAe,GAAG,eAAe,CAAC;GAC1C,OAAO,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;GAChD,OAAO,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;GAC9C,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC;GACtC,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC;GACtC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;GACxB,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC;;GAEzB,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;;EAE/D,EAAE,EAAE;AACkC;;;;;;;;;;;CC/LvC,MAAMC,KAAK,CAACC,IAAD,EAAOC,OAAP,EAAgB,CAAEC,SAAF,EAAaC,QAAb,CAAhB,EAAyCC,KAAzC,KAAmD;CAC5D;CACD,CAFD;;CAIA,MAAMC,MAAM,CAACL,IAAD,EAAOC,OAAP,EAAgB,CAAEC,SAAF,EAAaC,QAAb,CAAhB,EAAyCC,KAAzC,KAAmD;CAC7D;CACD,CAFD;;CAIA,MAAME,QAAQ,CAACN,IAAD,EAAOC,OAAP,EAAgB,CAAEM,KAAF,CAAhB,EAA2BH,KAA3B,KAAqC;CACjD;CACD,CAFD;;AAIA,8BAAe;CACbL,IADa;CAEbM,KAFa;CAGbC;CAHa,CAAf;;CCZA,MAAME,SAAS,CAACR,IAAD,EAAOC,OAAP,KAAmB;CAChC,MAAIA,QAAQQ,MAAR,CAAeT,IAAf,CAAJ,EAA0B;CACxB,WAAOC,QAAQS,SAAR,CAAkBV,IAAlB,CAAP;CACD,GAFD,MAEO,IAAIC,QAAQU,MAAR,CAAeX,IAAf,CAAJ,EAA0B;CAC/B,WAAO,CAAP;CACD;CACD,SAAO,CAAP;CACD,CAPD;;CASA,MAAMY,QAAQ,CAACZ,IAAD,EAAOC,OAAP,EAAgBY,IAAhB,EAAsBT,KAAtB,KAAgC,EAA9C;;CAIA,MAAMU,SAAS,CAACd,IAAD,EAAOC,OAAP,EAAgB,CAAEE,QAAF,CAAhB,EAA8BC,KAA9B,KAAwC;CACrD;CACA;CACD,CAHD;;CAKA,MAAMW,MAAM,CAACf,IAAD,EAAOC,OAAP,EAAgB,CAAEE,QAAF,EAAYa,YAAY,IAAxB,CAAhB,EAAgDZ,KAAhD,KAA0D;CACpE;CACA;CACA;CACD,CAJD;;CAMA,MAAMa,SAAS,CAACjB,IAAD,EAAOC,OAAP,EAAgB,CAAEE,QAAF,EAAYe,IAAZ,CAAhB,EAAoCd,KAApC,KAA8C;CAC3D;CACD,CAFD;;AAIA,6BAAe;CACbI,QADa;CAEbI,OAFa;CAGbE,QAHa;CAIbC,KAJa;CAKbE;CALa,CAAf;;CC5BA,MAAME,OAAO,CAACnB,IAAD,EAAOC,OAAP,EAAgBY,IAAhB,EAAsBT,KAAtB,KACXH,QAAQmB,OAAR,CAAgBhB,MAAMiB,aAAN,CAAoBrB,IAApB,EAA0BC,OAA1B,CAAhB,CADF;;CAGA,MAAMqB,OAAO,CAACtB,IAAD,EAAOC,OAAP,KACXA,QAAQsB,OAAR,CAAgBvB,IAAhB,CADF;;CAGA,MAAMwB,WAAW,CAACxB,IAAD,EAAOC,OAAP,EAAgB,CAACwB,SAAD,CAAhB,EAA6BrB,KAA7B,KAAuC;CACtDJ,SAAOI,MAAMiB,aAAN,CAAoBrB,IAApB,EAA0BC,OAA1B,CAAP;CACA,MAAIyB,IAAJ;;CAEA,MAAID,SAAJ,EAAe;CACbC,WAAOzB,QAAQ0B,iBAAR,CAA0B3B,IAA1B,EAAgCyB,SAAhC,CAAP;CACD,GAFD,MAEO;CACLC,WAAOzB,QAAQ2B,WAAR,CAAoB5B,IAApB,CAAP;CACD;;CAED,SAAOI,MAAMyB,aAAN,CAAoBH,IAApB,EAA0BzB,OAA1B,CAAP;CACD,CAXD;;CAaA;CACA,MAAM6B,aAAa,CAAC9B,IAAD,EAAOC,OAAP,EAAgBY,IAAhB,EAAsBT,KAAtB,KAAgC;CACjD,QAAM2B,SAAS3B,MAAMiB,aAAN,CAAoBrB,IAApB,EAA0BC,OAA1B,CAAf;CACA,MAAI8B,OAAOC,aAAP,EAAJ,EAA4B;CAC1B,WAAOD,OAAOD,UAAd;CACD;;CAED,SAAO,IAAP;CACD,CAPD;;CASA;CACA,MAAMG,YAAY,CAACjC,IAAD,EAAOC,OAAP,EAAgB,CAACiC,QAAD,CAAhB,EAA4B9B,KAA5B,KAAsC;CACtD,QAAM+B,QAAQL,WAAW9B,IAAX,EAAiBC,OAAjB,EAA0B,EAA1B,EAA8BG,KAA9B,CAAd;CACA,MAAI+B,KAAJ,EAAW;CACT,UAAMC,OAAOD,MAAME,YAAN,CAAmBH,QAAnB,CAAb;CACA,QAAIE,IAAJ,EAAU;CACR,aAAOA,KAAKE,KAAZ;CACD;CACF;CACD,SAAO,EAAP;CACD,CATD;;CAWA,MAAMC,UAAU,CAACvC,IAAD,EAAOC,OAAP,EAAgB,CAACuC,QAAQ,CAAT,CAAhB,EAA6BpC,KAA7B,KACdH,QAAQwC,UAAR,CAAmBrC,MAAMiB,aAAN,CAAoBrB,IAApB,EAA0BC,OAA1B,CAAnB,EAAuDuC,KAAvD,CADF;;CAGA,MAAME,OAAO,CAAC1C,IAAD,EAAOC,OAAP,EAAgBY,IAAhB,EAAsBT,KAAtB,KACXA,MAAMyB,aAAN,CAAoB5B,QAAQ0C,WAAR,CAAoB3C,IAApB,CAApB,EAA+CC,OAA/C,CADF;;CAGA,MAAM2C,SAAS,CAAC5C,IAAD,EAAOC,OAAP,EAAgBY,IAAhB,EAAsBT,KAAtB,KACbA,MAAMyB,aAAN,CAAoB5B,QAAQ4C,aAAR,CAAsB7C,IAAtB,CAApB,EAAiDC,OAAjD,CADF;;CAGA,MAAM6C,QAAQ,CAAC9C,IAAD,EAAOC,OAAP,EAAgB,CAAC8C,WAAD,CAAhB,EAA+B3C,KAA/B,KAAyC,EAAvD;;CAIA,MAAM4C,WAAW,CAAChD,IAAD,EAAOC,OAAP,EAAgB,CAAC8C,WAAD,CAAhB,EAA+B3C,KAA/B,KAAyC,EAA1D;;AAIA,6BAAe;CACbe,MADa;CAEbG,MAFa;CAGbE,UAHa;CAIbM,YAJa;CAKbG,WALa;CAMbM,SANa;CAObG,MAPa;CAQbE,QARa;CASbE,OATa;CAUbE;CAVa,CAAf;;CC1DA,MAAMvC,SAAUT,IAAD,IAAUA,gBAAgBiD,cAAhB,IAAkCjD,gBAAgBkD,KAA3E;;CAEA,MAAMC,SAAS,CAAC,GAAGtC,IAAJ,KAAa;CAC1B,QAAM,EAAEL,MAAF,KAAaK,IAAnB;CACA,QAAM,CAACb,IAAD,IAASa,IAAf;;CAEA,MAAIL,WAAW,CAAX,IAAgBC,OAAOT,IAAP,CAApB,EAAkC;CAChC,WAAOA,IAAP;CACD;;CAED,QAAM0B,OAAO,EAAb;;CAEA,OAAK,IAAIc,QAAQ,CAAjB,EAAoBA,QAAQhC,MAA5B,EAAoCgC,OAApC,EAA6C;CAC3C,UAAMY,OAAOvC,KAAK2B,KAAL,CAAb;CACA,QAAI/B,OAAO2C,IAAP,CAAJ,EAAkB;CAChB1B,WAAK2B,IAAL,CAAUC,IAAV,CAAeF,IAAf;CACD,KAFD,MAEO;CACL1B,WAAK2B,IAAL,CAAUD,IAAV;CACD;CACF;;CAED,SAAO1B,IAAP;CACD,CApBD;;CAsBA,MAAMf,SAAUX,IAAD,IAAUA,gBAAgBuD,WAAzC;;CAEA,MAAMC,SAAUxD,IAAD,IAAU;CACvB;CACA,MAAIS,OAAOT,IAAP,CAAJ,EAAkB;CAChB,WAAOA,KAAKQ,MAAL,GAAcR,KAAK,CAAL,CAAd,GAAwB,IAA/B;CACD;;CAED,SAAOW,OAAOX,IAAP,IAAeA,IAAf,GAAsB,IAA7B;CACD,CAPD;;CASA,MAAMyD,YAAY,CAAC/B,IAAD,EAAOc,QAAQ,CAAf,KAAqB;CACrC,MAAI/B,OAAOiB,IAAP,CAAJ,EAAkB;CAChB,WAAOA,KAAKc,KAAL,CAAP;CACD;;CAED,SAAOd,IAAP;CACD,CAND;;CAQA,MAAMhB,YAAagB,IAAD,IAAUA,KAAKlB,MAAjC;;CAEA;CACA,MAAMoB,cAAe5B,IAAD,IAAU;CAC5BA,SAAOwD,OAAOxD,IAAP,CAAP;;CAEA;CACA,SAAOW,OAAOX,IAAP,IAAeA,KAAKwB,QAApB,GAA+B2B,QAAtC;CACD,CALD;;CAOA,MAAMxB,oBAAoB,CAAC3B,IAAD,EAAOmB,IAAP,KAAgB;CACxCA,SAAOA,KAAKuC,WAAL,EAAP;CACA,QAAMlC,WAAWI,YAAY5B,IAAZ,CAAjB;CACA,QAAM,EAAEQ,MAAF,KAAagB,QAAnB;;CAEA,MAAI,CAAChB,MAAL,EAAa;CACX,WAAOgB,QAAP;CACD;;CAED,QAAME,OAAO,EAAb;;CAEA,OAAK,IAAIc,QAAQ,CAAjB,EAAoBA,QAAQhB,SAAShB,MAArC,EAA6CgC,OAA7C,EAAsD;CACpD,UAAMmB,QAAQnC,SAASgB,KAAT,CAAd;CACA,QAAImB,MAAMC,QAAN,CAAeF,WAAf,OAAiCvC,IAArC,EAA2C;CACzCO,WAAK2B,IAAL,CAAUM,KAAV;CACD;CACF;;CAED,SAAOjC,IAAP;CACD,CAnBD;;CAqBA,MAAMmC,cAAe7D,IAAD,IAAU,CAAC,CAACwD,OAAOxD,IAAP,EAAa8D,iBAA7C;;CAEA,MAAMC,WAAW,CAAC/D,IAAD,EAAOmB,IAAP,KAAgB;CAC/B,QAAMK,WAAWI,YAAY5B,IAAZ,CAAjB;CACA,QAAM,EAAEQ,MAAF,KAAagB,QAAnB;;CAEA,OAAK,IAAIgB,QAAQ,CAAjB,EAAoBA,QAAQhC,MAA5B,EAAoCgC,OAApC,EAA6C;CAC3C,QAAIhB,SAASgB,KAAT,EAAgBoB,QAAhB,KAA6BzC,IAAjC,EAAuC;CACrC,aAAO,IAAP;CACD;CACF;;CAED,SAAO,KAAP;CACD,CAXD;;CAaA,MAAMsB,aAAa,CAACzC,IAAD,EAAOwC,KAAP,KAAiBZ,YAAY5B,IAAZ,EAAkBwC,KAAlB,CAApC;;CAEA,MAAMwB,eAAe,CAAChE,IAAD,EAAOmB,IAAP,KAAgBqC,OAAOxD,IAAP,EAAagE,YAAb,CAA0B7C,IAA1B,CAArC;;CAEA,MAAM8C,oBAAoB,CAACjE,IAAD,EAAOmB,IAAP,KAAgBqC,OAAOxD,IAAP,EAAakE,YAAb,CAA0B/C,IAA1B,CAA1C;;CAEA,MAAMC,UAAWpB,IAAD,IAAUwD,OAAOxD,IAAP,EAAa4D,QAAvC;;CAEA,MAAMrC,UAAWvB,IAAD,IAAUwD,OAAOxD,IAAP,EAAamE,SAAvC;;CAEA,MAAMtB,gBAAiB7C,IAAD,IAAUwD,OAAOxD,IAAP,EAAaoE,UAA7C;;CAEA,MAAMzB,cAAe3C,IAAD,IAAUwD,OAAOxD,IAAP,EAAaqE,WAAb,EAA9B;;CAEA,MAAMC,eAAgB5B,IAAD,IAAU;CAC7B,MAAIA,SAAS6B,SAAT,IAAsB7B,SAAS8B,QAAnC,EAA6C;CAC3C,WAAOA,SAASC,iBAAhB;CACD,GAFD,MAEO,IAAI,OAAO/B,IAAP,KAAgB,QAApB,EAA8B;CACnC,WAAO8B,SAASE,aAAT,CAAuBhC,IAAvB,CAAP;CACD;;CAED,SAAOA,IAAP;CACD,CARD;;AAUA,qBAAe;CACbjC,QADa;CAEb0C,QAFa;CAGbxC,QAHa;CAIb8C,WAJa;CAKb/C,WALa;CAMbkB,aANa;CAObD,mBAPa;CAQbkC,aARa;CASbE,UATa;CAUbtB,YAVa;CAWbuB,cAXa;CAYbC,mBAZa;CAab7C,SAba;CAcbG,SAda;CAebsB,eAfa;CAgBbF,aAhBa;CAiBb2B;CAjBa,CAAf;;CClGA,MAAMK,gBAAgB,GAAtB;;AAEAC,cAAkBC,aAAlB;;AAEAC,cAAiBC,YAAjB;AACAD,cAAiBE,qBAAjB;AACAF,cAAiBG,qBAAjB;AACAH,cAAiBI,sBAAjB;;AAEAC,cAAcR,aAAd,EAA6B,CAAC3E,IAAD,EAAOC,OAAP,EAAgB,CAACkB,IAAD,CAAhB,KAA2BlB,QAAQgE,iBAAR,CAA0BjE,IAA1B,EAAgCmB,IAAhC,CAAxD;;AAEA,OAAMiE,YAAS,CAAC1C,IAAD,EAAOzC,UAAU4E,aAAjB,KAAmCQ,aAAW3C,IAAX,EAAiBzC,OAAjB,CAAlD;;;;;;;;;;;;;;;;"}